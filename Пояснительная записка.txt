Название: Adventure of Kyo
Авторы: Рогожин Дмитрий, Алёна Ващенко, Тимофей Ляхов	Авторы: Рогожин Дмитрий, Алёна Ващенко, Тимофей Ляхов
Описание идеи:
    Игра в жанре платформер – метроидвания,с открытая карта, по которой можно свободно перемещаться, с врагами,
    платформами, спрятанными секретами (увеличение жизней и бомб) и боссомю Возможность атааковать простыми ударами
    мечом и с использованием бомб, которые атакуют врагов и взрывают стены. Возможность уменьшать свой рост для
    попадания в узкие проходы. Возможность сохранения прогресса на кострах. Дружелюбное меню, в котором можно загрузить,
    либо создать новую игру, а так же получить доступ к простейшим настройкам. Возможность собирать некоторые побочные
    предметы (к примеру, сердечки, восстанавливающие жизни), а так же система бонусов.
Описание реализации:
    проект реализован в 7 основных файлах, с помощью 13 классов:
        Player - Используется для создания и отрисовки персонажа, а так-же управления им, в данном классе прописана
        почти вся физика, один из самых больших классов, написан в отдельном файле player_file, так же в этом файле
        есть две вспомогательные функции для класса Player, отвечающие за работу коллизии, сам же клас по сути состоит
        из 2 функций, __init__ с объявление всех констант и update где с помощью большого числа условных оператаров
        расчитывается текущее положение персоонажа, получение урона, состояние прыжка, удара и т.д.

        Brick - Используется для создания практически всех предметов окружения, является универсальным базовым классом,
        от наследован от класса pygame.sprite.Sprite, используется для создания предметов окружения не обладающих
        какими либо свойствами.

        SavePoint - Используется для создания предмета окружения, используемого для сохранения, от наследован от Brick,
        имеет доп функцию update, для отрисовки анимации.

        Bomb - Используется для создания бомб кидаемых игроком, от наследован от Brick, в отличии от своего родителя
        имеет несколько служебных методов таких как move и init, используемых только внутри этого класса и метода update
        вызываемого из вне,в методу move происходит расчёт траектории движения.

        Boss_Bomb - Используется для создания бомб кидаемых босом, от наследован от Brick, единственные отличия от
        родителя, функции update и move а именно тот факт что эти бомбы не наносят урон босу и врагам, а так-же летят
        по прямой.

        Enemy - Базовый класс для создания врагов, содержит основные переменные, чтобы не объявлять их несколько раз,
        от наследован от Brick, сам по себе в отличии от Brick не используется, преднозначен исключительно для
        наследования.

        Boss - Класс для обеспечения функционала босса, от наследован от Enemy, имеет сложную внутренюю структуру,
        со множеством внутренних функций, только функции update и get_damage выхываются из вне.

        Crash - Класс для обеспечения функционала 1 типа врагов (бегающего), от наследован от Enemy, по сути в этом
        классе прописана элементарная логика поведения врага, проверка на падение и д.т. и т.п.

        Fly - Класс для обеспечения функционала 2 типа врагов (летающего), от наследован от Enemy, прописана другая
        логика врага, с некими ограничениями по сравнению с 1 типом.

        Gui - Класс для обеспечения функционала пользовательского интерфейса, отображает сердечки и бомбы

        Wal_sprite - Класс для обеспечения правильной работы карты, загрузки выгрузки блоков и т.д.

        Render - Класс для рендора объектов из 1 файла

        Button - Простой класс для обеспечения функционала кнопок в main файле

Описание технологий:
    Графическая библиотека pygame
    Библиотека для работы с базами данных json
    Библиотека для работы с несколькими потоками threading
    Библиотека для работы с файлами (копирование) shutil
    Библиотека для работы с рандомом random
    Системные библиотеки os и sys
Дальнейшие пути развития:
    Расширить сеттинг игры
    Добавить персонажей, врагов
    Расширить карту, сделать больше уровней
    Полноценный выход игры
